# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  batch: true
  branches:
    include:
    - master
    - releases/*
  paths:
    include:
    - PoolSensorAPI

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'
  projectName: 'PoolSensorAPI'
  workingDirectory: '$(System.DefaultWorkingDirectory)/PoolSensorAPI'

stages:
- stage: Build
  displayName: Build stage

  jobs:
    - job: Build
      displayName: Build stage

      steps:
      - task: DotNetCoreCLI@2
        displayName: 'Build the project - $(buildConfiguration)'
        inputs:
          command: build
          arguments: '-c $(buildConfiguration) --output $(System.DefaultWorkingDirectory)/publish_output'
          projects: '$(workingDirectory)/*.csproj'

      - task: DotNetCoreCLI@2
        displayName: "Run unit tests"
        inputs:
          command: 'test'
          projects: '**/*Tests.csproj'
          testRunTitle: 'Run unit tests'
          arguments: '-c $(buildConfiguration)'

      - task: ArchiveFiles@2
        displayName: 'Archive files'
        inputs:
          rootFolderOrFile: '$(System.DefaultWorkingDirectory)/publish_output'
          includeRootFolder: false
          archiveType: zip
          archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
          replaceExistingArchive: true

      - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'development'

    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'Azure subscription mattias(909eb5e0-25b8-4ea2-a491-e39f55abbcb4)'
              appType: 'webApp'
              appName: 'PoolSensorAPI'
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              deploymentMethod: 'auto'
        

